name: Selenium Test Pipeline

on: [push, pull_request]

jobs:
  # Step 1: Read createTestData flag from config.yaml
  check-config:
    runs-on: windows-latest
    outputs:
      createTestData: ${{ env.createTestData }}  # Fix: Read from env instead of outputs
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install YAML Dependencies
        run: pip install pyyaml

      - name: Read createTestData Flag (PowerShell)
        id: read-flag
        shell: pwsh
        run: |
          $jsonContent = python -c "import yaml, json; print(json.dumps(yaml.safe_load(open('config.yaml'))))"
          $config = $jsonContent | ConvertFrom-Json
          echo "createTestData=$($config.createTestData)" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Show Flag Value
        run: echo "createTestData is ${{ env.createTestData }}"

  # Step 2: Conditional Test Data Creation Job
  testDataCreation:
    needs: check-config
    if: needs.check-config.outputs.createTestData == 'true' || needs.check-config.outputs.createTestData == 'True'  # Fix: Handle case variations
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Test Data Generation
        run: python metadata_driven/TestDataGenerationViaMetadata.py

  # Step 3: Test Case Execution (Always Runs)
  testCaseExecution:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-html  # Explicitly install pytest-html

      - name: Run Selenium Tests
        run: pytest --html=reports/test_report.html --self-contained-html  # Now pytest-html should work

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-report
          path: reports/test_report.html


  # Step 4: Data Reconciliation (Runs After Test Execution)
  dataReconciliation:
    needs: testCaseExecution
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Data Reconciliation
        run: echo "Tests completed"

  
