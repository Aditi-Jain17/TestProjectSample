name: Selenium Test Pipeline

on: [push, pull_request]

jobs:
  # Step 1: Read createTestData flag from config.yaml
  check-config:
    runs-on: windows-latest
    outputs:
      createTestData: ${{ steps.read-flag.outputs.createTestData }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Read createTestData Flag (PowerShell)
        id: read-flag
        shell: pwsh
        run: |
          $yamlContent = Get-Content config.yaml | ConvertFrom-Yaml
          $createTestData = $yamlContent.createTestData
          echo "createTestData=$createTestData" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "::set-output name=createTestData::$createTestData"


  # Step 2: Conditional Test Data Creation Job
  testDataCreation:
    needs: check-config
    if: needs.check-config.outputs.createTestData == 'true'  # Only run if flag is true
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Test Data Generation
        run: python TestDataGenerationViaMetadata.py

  # Step 3: Test Case Execution (Always Runs)
  testCaseExecution:
    needs: [check-config, testDataCreation]
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Selenium Tests
        run: pytest --html=reports/test_report.html --self-contained-html

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-report
          path: reports/test_report.html

  # Step 4: Data Reconciliation (Runs After Test Execution)
  dataReconciliation:
    needs: testCaseExecution
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Data Reconciliation
        run: echo "Tests completed"

  # Step 5: Reporting (Final Step)
  reporting:
    needs: dataReconciliation
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Report
        run: python generate_report.py

      - name: Upload Final Report
        uses: actions/upload-artifact@v4
        with:
          name: final-report
          path: reports/final_report.html
